{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/Footer.js","components/TodoApp.js","App.js","index.js"],"names":["TodoItem","state","isEdit","length","props","todos","editTitle","title","activateTextInput","setState","target","value","submitChangeTitle","event","id","key","changeTitle","this","completed","changeCompleted","deleteTodo","index","className","ClassNames","editing","type","checked","onChange","htmlFor","onDoubleClick","onClick","onKeyDown","React","Component","TodoList","сalltoggleAllStatus","toggleAllStatus","toggleTodosStatus","map","todo","todosArr","filtersButton","href","Footer","filteredTodos","filter","filterTodo","clearCompleted","clearCompletedTodos","countActive","selected","isFilterAll","isFilterActive","isFilterCompleted","TodoApp","submitTodo","addedTodo","toggleAllTodos","placeholder","App","splice","prev","filterTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffbb6eb6.chunk.js","sourcesContent":["import React from 'react';\nimport ClassNames from 'classnames';\n\nclass TodoItem extends React.Component {\n  state = {\n    isEdit: false,\n    length: this.props.todos.length,\n    editTitle: this.props.title,\n  };\n\n  activateTextInput = () => (\n    this.setState({\n      isEdit: true,\n    })\n  );\n\n  editTitle = ({ target }) => (\n    this.setState({\n      editTitle: target.value,\n    })\n  );\n\n  submitChangeTitle = (event, title, id) => {\n    if (event.key === 'Escape') {\n      this.setState({\n        isEdit: false,\n      });\n    } else if (event.key === 'Enter') {\n      this.props.changeTitle(title, id);\n      this.setState({\n        isEdit: false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      id,\n      title,\n      completed,\n      changeCompleted,\n      deleteTodo,\n      index\n    } = this.props;\n    const { isEdit, editTitle } = this.state;\n\n    return (\n      <div>\n        <li className={ClassNames({\n          completed,\n          editing: isEdit,\n        })}\n        >\n          <div className=\"view\">\n            <input\n              type=\"checkbox\"\n              className=\"toggle\"\n              id={id}\n              checked={completed}\n              onChange={() => (changeCompleted(id))}\n            />\n            <label\n              htmlFor={id}\n              onDoubleClick={this.activateTextInput}\n            >\n              {title}\n            </label>\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              onClick={() => deleteTodo(index)}\n            />\n          </div>\n          <input\n            type=\"text\"\n            className=\"edit\"\n            onKeyDown={event => this.submitChangeTitle(event, editTitle, id)}\n            onChange={this.editTitle}\n            value={editTitle}\n          />\n        </li>\n      </div>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodoList extends React.Component {\n  сalltoggleAllStatus = () => {\n    this.props.toggleAllStatus();\n  };\n\n  render() {\n    const {\n      todos,\n      changeCompleted,\n      deleteTodo,\n      changeTitle,\n      toggleTodosStatus,\n    } = this.props;\n\n    return (\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={toggleTodosStatus}\n          onChange={this.сalltoggleAllStatus}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <ul className=\"todo-list\">\n          {(todos.length === 0) || todos.map((todo, index, todosArr) => (\n            <TodoItem\n              key={todo.id}\n              title={todo.title}\n              id={todo.id}\n              completed={todo.completed}\n              index={index}\n              todos={todosArr}\n              changeCompleted={changeCompleted}\n              deleteTodo={deleteTodo}\n              changeTitle={changeTitle}\n            />\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from 'react';\nimport ClassNames from 'classnames';\n\nconst filtersButton = [\n  {\n    title: 'All',\n    href: '#/',\n    id: 0,\n  },\n  {\n    title: 'Active',\n    href: '#/active',\n    id: 1,\n  },\n  {\n    title: 'Completed',\n    href: '#/completed',\n    id: 2,\n  },\n];\n\nclass Footer extends React.Component {\n\n  filteredTodos = (filter) => (\n    this.props.filterTodo(filter)\n  );\n\n  clearCompleted = () => (\n    this.props.clearCompletedTodos()\n  );\n\n  render() {\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          {`${this.props.countActive} items left`}\n        </span>\n\n        <ul className=\"filters\">\n          {filtersButton.map(filter => (\n            <span key={filter.id}>\n              <li>\n                <a\n                  href={filter.href}\n                  onClick={() => (this.filteredTodos(filter.title))}\n                  className={ClassNames(\n                    { selected: this.props.isFilterAll },\n                    { selected: this.props.isFilterActive },\n                    { selected: this.props.isFilterCompleted },\n                  )}\n                >\n                  {filter.title}\n                </a>\n              </li>\n            </span>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={this.clearCompleted}\n        >\n          Clear completed\n        </button>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport TodoList from './TodoList';\nimport Footer from './Footer';\n\nclass TodoApp extends React.Component {\n  state = {\n    id: 0,\n    title: '',\n    completed: false,\n  };\n\n  changeTitle = event => (\n    this.setState({\n      title: event.target.value,\n    })\n  );\n\n  submitTodo = (event) => {\n    if (event.key === 'Enter') {\n      this.props.addedTodo(\n        {\n          id: this.state.id,\n          title: this.state.title,\n          completed: this.state.completed,\n        },\n      );\n\n      this.setState(state => ({\n        title: '',\n        id: state.id + 1,\n      }\n      ));\n\n      this.props.toggleAllTodos();\n    }\n  };\n\n  render() {\n    const { title } = this.state;\n    const {\n      todos,\n      changeCompleted,\n      deleteTodo,\n      changeTitle,\n      toggleAllStatus,\n      toggleAllTodos,\n      toggleTodosStatus,\n      filterTodo,\n      countActive,\n      isFilterAll,\n      isFilterActive,\n      isFilterCompleted,\n      clearCompletedTodos,\n    } = this.props;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            value={title}\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.changeTitle}\n            onKeyDown={this.submitTodo}\n          />\n        </header>\n\n        <TodoList\n          todos={todos}\n          changeCompleted={changeCompleted}\n          deleteTodo={deleteTodo}\n          changeTitle={changeTitle}\n          toggleTodosStatus={toggleTodosStatus}\n          toggleAllTodos={toggleAllTodos}\n          toggleAllStatus={toggleAllStatus}\n        />\n        <Footer\n          filterTodo={filterTodo}\n          countActive={countActive}\n          isFilterAll={isFilterAll}\n          isFilterActive={isFilterActive}\n          isFilterCompleted={isFilterCompleted}\n          clearCompletedTodos={clearCompletedTodos}\n        />\n      </section>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './components/TodoApp';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    toggleTodosStatus: false,\n    filter: 'All',\n    isFilterAll: true,\n    isFilterActive: false,\n    isFilterCompleted: false,\n  };\n\n  addedTodo = (todo) => {\n    this.setState(state => ({\n      todos: [...state.todos, todo],\n    }));\n  };\n\n  changeCompleted = (id) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n      toggleTodosStatus: false,\n    }));\n  };\n\n  changeTitle = (title, id) => {\n    this.setState(state => (\n      {\n        todos: state.todos.map((todo) => {\n          if (todo.id === id) {\n            return {\n              ...todo,\n              title,\n            };\n          }\n\n          return todo;\n        }),\n        toggleTodosStatus: !state.toggleTodosStatus,\n      }\n    ));\n  };\n\n  deleteTodo = index => (\n    this.setState((state) => {\n      state.todos.splice(index, 1);\n\n      return {\n        todos: [...state.todos],\n      };\n    })\n  );\n\n  toggleAllTodos = () => (\n    this.setState({\n      toggleTodosStatus: false,\n    })\n  );\n\n  toggleAllStatus = () => (\n    this.setState(prev => (\n      {\n        todos: prev.todos.map(todo => (\n          {\n            ...todo,\n            completed: !prev.toggleTodosStatus,\n          })),\n        toggleTodosStatus: !prev.toggleTodosStatus,\n      }\n    ))\n  );\n\n  filterTodo = (filter) => {\n    if (filter === 'All') {\n      this.setState({\n        isFilterAll: true,\n        isFilterActive: false,\n        isFilterCompleted: false,\n        filter,\n      });\n    } else if (filter === 'Completed') {\n      this.setState({\n        isFilterAll: false,\n        isFilterActive: false,\n        isFilterCompleted: true,\n        filter,\n      });\n    } else if (filter === 'Active') {\n      this.setState({\n        isFilterAll: false,\n        isFilterActive: true,\n        isFilterCompleted: false,\n        filter,\n      });\n    }\n  };\n\n  clearCompletedTodos = () => (\n    this.setState(prev => ({\n      todos: prev.todos.filter(todo => todo.completed === false),\n    }))\n  );\n\n  render() {\n    const {\n      todos,\n      toggleTodosStatus,\n      filter,\n      isFilterAll,\n      isFilterActive,\n      isFilterCompleted,\n    } = this.state;\n    let filterTodos = [...todos];\n\n    if (filter === 'All') {\n      filterTodos = [...todos];\n    }\n\n    if (filter === 'Completed') {\n      filterTodos = filterTodos.filter(todo => (todo.completed === true));\n    }\n\n    if (filter === 'Active') {\n      filterTodos = filterTodos.filter(todo => (todo.completed === false));\n    }\n\n    const countActive = filterTodos.filter(todo => (\n      todo.completed === false)).length;\n\n    return (\n      <>\n        <TodoApp\n          todos={filterTodos}\n          isFilterAll={isFilterAll}\n          isFilterActive={isFilterActive}\n          isFilterCompleted={isFilterCompleted}\n          toggleTodosStatus={toggleTodosStatus}\n          toggleAllTodos={this.toggleAllTodos}\n          addedTodo={this.addedTodo}\n          changeCompleted={this.changeCompleted}\n          deleteTodo={this.deleteTodo}\n          changeTitle={this.changeTitle}\n          toggleAllStatus={this.toggleAllStatus}\n          filterTodo={this.filterTodo}\n          clearCompletedTodos={this.clearCompletedTodos}\n          countActive={countActive}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}